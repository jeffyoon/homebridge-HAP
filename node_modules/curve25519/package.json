{
  "name": "curve25519",
  "description": "A binding to the curve25519-donna library.",
  "version": "1.1.0",
  "author": {
    "name": "Jann Horn",
    "email": "jannhorn@googlemail.com"
  },
  "main": "index.js",
  "scripts": {
    "test": "node test.js",
    "install": "node-gyp rebuild"
  },
  "dependencies": {
    "nan": "^2.0.9",
    "bindings": "~1.2.1"
  },
  "gypfile": true,
  "gitHead": "922eae612bb379fa84e8deb29f80c53d57c8be7b",
  "readme": "This is a binding to the curve25519-donna library for node. Usage:\n\n    var curve = require('curve25519');\n\nMethods\n=======\n`curve.makeSecretKey(secret)`\n-----------------------------\nProvide it with a 32-bytes-long `Buffer` and it will be modified in-place in order to be a usable secret key. Doesn't return anything.\n\n`curve.derivePublicKey(secret)`\n-------------------------------\nProvide it with your secret key as a 32-bytes-long `Buffer` and get a `Buffer` containing your public key as the result.\n\n`curve.deriveSharedSecret(mysecret, hispublic)`\n-----------------------------------------------\nDerive your shared secret with someone else by giving this function two 32-bytes-long buffers containing your secret key and the other persons public key. Returns a `Buffer`.\n\nInstalling\n==========\nNot yet on npm, I will only put it there when it's stable. Just work with `git clone` and `npm link`.\n",
  "readmeFilename": "README",
  "_id": "curve25519@1.1.0",
  "_shasum": "6e67bc562a6edbe98af05cc3e470bc982d1e4bc2",
  "_from": "git://github.com/KhaosT/node-curve25519.git",
  "_resolved": "git://github.com/KhaosT/node-curve25519.git#922eae612bb379fa84e8deb29f80c53d57c8be7b"
}
